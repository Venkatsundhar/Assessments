# -*- coding: utf-8 -*-
"""PY_IA1_LVADSUSR195.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15ei-hvcIkbZ5lZ9JEmzIe3DDYT2DQxP6
"""

#1 Commercial property management system
def area(l,w):
  area = l*w
  if area<=250:
    return 'Small'
  elif area > 250 and area<=500:
    return 'Medium'
  else:
    return 'Large'

#1
l = int(input("Enter the length in metres:"))
w = int(input("Enter the width in metres:"))
property_category = area(l,w)
print("The property entered is",property_category,"in size")

#2
import math
height = float(input("Enter your height in metres:"))
weight = float(input("Enter your weight in KGS:"))
bmi = weight/(height**2)
print(bmi)
if bmi < 18.5:
  print("Underweight")
elif bmi>=18.5 and bmi<23:
  print("Healthy")
elif bmi>=23 and bmi<27:
  print("Overweight")
else:
  print("Obese")

#3 Educational Record System
def enter_details(D):
  m = int(input("Enter the number of students:"))
  for i in range(m):
    name = input("Enter the name of the student:")
    D.update({name:{}})
    n = int(input("Enter total number of subjects:"))
    for i in range(n):
      sub = input("Enter the subject name:")
      grade = input("Enter the grade received:")
      D.update({name:{sub:grade}})
  print(D)

D = {}

#3
enter_details(D)

#4
D = {'children':['Avengers','Narnia'],
     'Teen':['Brookly99','Rush-hour'],
     'Adult':['BrBa','GOT'],
     'Senior':['True detective','Dark']
     }
age = int(input("Enter your age:"))
c = ''
if age<=14:
  c = 'children'
elif age>14 and age<=17:
  c = 'Teen'
elif age>17 and age<=45:
  c='Adult'
else:
  c='Senior'
print("Shows recommended for you:",D[c])

#5
L = [i for i in range(100,200,9)]
print("Subscribers List:",L)
print("Subscribers to target for promotional email campaign:")
for i in L:
  if i%2==0:
    print(i)

#6
Hash_DB = {}
n = int(input("Enter the number of authorised users:"))
for i in range(n):
  name = input("Enter the name:")
  passw = input("Enter the password:")
  Hash_DB.update({name:passw})
while True:
  check_name = input("Enter your name:")
  check_pw = input("Enter your password:")
  if check_pw == Hash_DB[check_name]:
    print("Authorisation Granted! Welcome ",check_name)
    break
  else:
    pass

#7

#7
def check(L):
  c=0
  for i in range(len(L)):
    for j in L[i]:
      if (j=='a'or j=='A') or (j=='e'or j=='E') or (j=='i'or j=='I') or (j=='o'or j=='O') or (j=='u'or j=='U'):
        c=c+1
      else:
        pass
    L1.append(c)
  return L1

#7
L = ['ewueuveuovbivrufhufh2f8o4y','ouefhuovbvuohuvurviubi',
     'ubvuorh4gih4ibtjbnutjvuth',',iwihfifhinvnribbhqeppv']
L1 = []
L1 = check(L)
G_c = []
for i in range(len(L1)):
  if L1[i] > 25:
    G_c.append(L[i])
print("The good comments are:",G_c)

#8
def check(L):
  c=0
  for i in range(len(L)):
    for j in L[i]:
      if (j=='a'or j=='A') or (j=='e'or j=='E') or (j=='i'or j=='I') or (j=='o'or j=='O') or (j=='u'or j=='U'):
        c=c+1
      else:
        pass
    L1.append(c)
  return L1

#8
L = ['ewueuveuovbivrufhufh2f8o4y','ouefhuovbvuohuvurviubi',
     'ubvuorh4gih4ibtjbnutjvuth',',iwihfifhinvnribbhqeppv']
L1 = []
L1 = check(L)
G_c = []
for i in range(len(L1)):
  if L1[i] > 25:
    G_c.append(L[i])
print("The good comments are:",G_c)

#9
def Loans(n):
  D = {}
  for i in range(n):
    name = input("Enter your name:")
    Loan_amnt = int(input("Enter your loan amount:"))
    Amnt_paid = int(input("Enter the amount paid:"))
    D.update({name:[Loan_amnt,Amnt_paid]})
  print("Finance Db:",D)
  # To find ppl who hasnt paid half of loan amount

#9
n = int(input("Enter number of users:"))
Loans(n)

#10
def Loans(n):
  D = {}
  for i in range(n):
    name = input("Enter your name:")
    Loan_amnt = int(input("Enter your loan amount:"))
    Amnt_paid = int(input("Enter the amount paid:"))
    D.update({name:[Loan_amnt,Amnt_paid]})
  print("Finance Db:",D)
  # To find ppl who hasnt paid half of loan amount

#10
n = int(input("Enter number of users:"))
Loans(n)

#11
def tools(a,b):
  print("Addition:",a+b)
  print("Subtraction:",a-b)
  print("Multiplication:",a*b)
  try:
    print("Division:",a/b)
  except ZeroDivisionError:
    print("B should not be 0")

#11
a  = int(input("Enter a:"))
b  = int(input("Enter b:"))
tools(a,b)

#12
def tools(a,b):
  print("Addition:",a+b)
  print("Subtraction:",a-b)
  print("Multiplication:",a*b)
  try:
    print("Division:",a/b)
  except ZeroDivisionError:
    print("B should not be 0")

#12
a  = int(input("Enter a:"))
b  = int(input("Enter b:"))
tools(a,b)

#13

#14

#15