# -*- coding: utf-8 -*-
"""LVADSUSR195_Venkatsundhar-SP.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oKTaV89w2bExpL-jyL0Soz1xbPKJNtRJ

4403 IA-2
"""

import numpy as np

#1
Arr = np.arange(0,13,2)
print(Arr)
Min = np.min(Arr)
Max = np.max(Arr)
sum = np.sum(Arr)
Mean = np.mean(Arr)
std = np.std(Arr)
print("Min:",Min)
print("Max:",Max)
print("Sum:",sum)
print("Mean:",Mean)
print("Standard deviation:",std)

#2
def normalised_data(health_data):
  mean = np.mean(health_data, axis=0)
  std = np.std(health_data, axis=0)
  normalized_data = (health_data - mean) / std
  return normalized_data

#2
health_data = np.array([[160,70,30],[165,65,35],[170,75,40]])
print("Health Data:")
n_d=normalised_data(health_data)
print("Normalised Data:")

#3

#4
sensor_reading = np.linspace(15,25,24)
print(sensor_reading)

#5
Arr = np.array([1234,5678,9876,43566,321])
m_arr = np.cumsum(Arr)
mv_arr = []
for i in range(1,len(m_arr)+1):
  mv_arr.append((m_arr/i))
print(mv_arr)

#6

#7
property_matrix = np.array([[1,2,3],[4,5,6],[7,8,9]])
# Determinant of a matrix = Inv(matrix)/transpose(matrix)

#8
Matrix = np.array([[1,2,3],[4,5,6],[7,8,9]])
mask = Matrix > 5
print(Matrix[mask])

#9
data = {'Name':['Alice','Bob','Charlie','David','Eve','Frank','Grace'],
        'Age':[25,30,35,40,45,50,55],
        'City':['New York','Los Angeles','Chicago','Houston','Phoenix','Miami','Boston'],
        'Department':['Hr','It','Finance','Marketing','Sales','It','Hr']
        }
df = pd.DataFrame(data)
df = df[['Name', 'City']][df['Age'] < 45]
df.set_index('Name', inplace=True)
print(df)

#10
import pandas as pd
Data = {'Department':['Electronics','Electronics','Clothing','Clothing','Home Goods'],
        'Salesperson':['Alice','Bob','Charlie','David','Eve'],
        'Sales':[70000,50000,30000,40000,60000]}
df = pd.DataFrame(Data)
avg_salesperson = df.groupby(['Department', 'Salesperson'])['Sales'].mean().reset_index()
print(avg_salesperson)
avg_department = avg_salesperson.groupby('Department')['Sales'].mean().reset_index()
print(avg_department)
ranked_departments = avg_department.sort_values(by='Sales', ascending=False).head(1)
print(ranked_departments)

#11
data = {'Product':['Apples','Bananas','Cherries','Dates','Elderberries','Flour','Grapes'],
        'Category':['Fruit','Fruit','Fruit','Fruit','Fruit','Bakery','Fruit'],
        'Price':[1.20,0.50,3.00,2.50,4.00,1.50,2.00],
        'Promotion':[True,False,True,True,False,True,False]
}
df = pd.DataFrame(data)
filtered_df = df[(df['Category'] == 'Fruit') & (df['Promotion'] == False) & (df['Price'] > df[df['Category'] == 'Fruit']['Price'].mean())]
print(filtered_df)

#12
employee_data = {
    'Employee':['Alice','Bob','Charlie','David'],
    'Department':['Hr','It','Finance','It'],
    'Manager':['John','Rachel','Emily','Rachel']
}

project_data = {
    'Employee':['Alice','Charlie','Eve'],
    'Project':['P1','P3','P2']
}
employeee_data = pd.DataFrame(employee_data)
projectt_data = pd.DataFrame(project_data)
joined_data = employeee_data.merge(projectt_data, on='Employee' ,how='left')
joined_data.fillna('Not assigned yet', inplace=True)
print(joined_data)

#13
Df = pd.read_csv('/content/sample_data/Q13_sports_team_stats.csv')
print(Df)
win_ratio = Df['Wins']/Df['GamesPlayed']
print("Win_Ratio:\n",win_ratio)
avg_score=Df.groupby(['TeamID'])['Wins'].mean()
print("Avg_Score:",avg_score)

#14
Df = pd.read_csv('/content/sample_data/Q14_customer_purchases.csv')
print(Df)

#15
Df = pd.read_csv('/content/sample_data/Q15_student_grades.csv')
print(Df)

