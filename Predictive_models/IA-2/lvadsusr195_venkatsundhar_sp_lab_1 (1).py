# -*- coding: utf-8 -*-
"""LVADSUSR195_Venkatsundhar-sp_LAB-1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1o5Nn7dJnTtQ4Y5DTelUM3dLypUZKzPKe

4403 CLASSIFICATION LAB-1
"""

import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.preprocessing import LabelEncoder,MinMaxScaler
from sklearn.metrics import silhouette_score
from sklearn.cluster import KMeans
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import r2_score,mean_squared_error,accuracy_score,f1_score,precision_score,recall_score,classification_report,confusion_matrix
from sklearn.preprocessing import MinMaxScaler
import xgboost as xgb
import warnings
warnings.filterwarnings("ignore")

df = pd.read_csv('/content/sample_data/winequality-red.csv')
df.head()

df.info()

df.describe()

"""1A"""

# Handle null values

df.isnull().sum()

83/1600

# Plot histogram to understand the skewness

for c in df.columns:
  plt.figure(figsize=(10,7))
  sns.histplot(df[c])
  plt.title(f'Histogram of {c}')

df.columns

# Except density and ph everything is skewed left
# Fill density and ph with mean and rest with median
for c in df[['density','pH']]:
  df[c].fillna(df[c].mean(),inplace=True)
for c in df[['fixed acidity', 'volatile acidity', 'citric acid', 'residual sugar',
       'chlorides', 'free sulfur dioxide', 'total sulfur dioxide','sulphates', 'alcohol', 'quality']]:
       df[c].fillna(df[c].median(),inplace=True)

df.isnull().sum()

# Treating Outliers
# Boxplot
for c in df.columns:
  sns.boxplot(df[[c]])

# Outlier
for c in df.select_dtypes(include='number').columns:
  q1=df[c].quantile(0.25)
  q3=df[c].quantile(0.75)
  iqr=q3-q1
  lower=q1-1.5*iqr
  upper=q3+1.5*iqr
  df.loc[df[c]>upper,c]=upper
  df.loc[df[c]<lower,c]=lower

"""2A"""

if df['quality']>=3 & df['quality']<=6:
  df['quality']=0
elif df['quality']>=7 & df['quality']<=8:
  df['quality']=1

df.columns

#3
L = LabelEncoder()
for c in df[['fixed acidity', 'volatile acidity', 'citric acid', 'residual sugar',
       'chlorides', 'free sulfur dioxide', 'total sulfur dioxide', 'density',
       'pH', 'sulphates', 'alcohol','quality']]:
       df[c]=L.fit_transform(df[c])
df.head()

#4
df_tar = df[['fixed acidity', 'volatile acidity', 'citric acid', 'residual sugar',
       'chlorides', 'free sulfur dioxide', 'total sulfur dioxide', 'density',
       'pH', 'sulphates', 'alcohol']]
df_tar.corr()

sns.heatmap(df_tar.corr(),annot=True,fmt='.2f')

df.duplicated().sum()

df.drop_duplicates()

df.shape

# Features like citric acid suplhur dioxide can be removed

df.columns

"""5"""

X = df[['fixed acidity', 'volatile acidity', 'residual sugar',
       'chlorides', 'free sulfur dioxide','density',
       'pH','alcohol',]]
y = df['quality']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)

rf = RandomForestClassifier()

scaler = MinMaxScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

rf.fit(X_train,y_train)

predicted = rf.predict(y_test)

